<!doctype html>
<html lang="en-US">
<head>
    <title>Graderoom</title>
    <link rel="icon" href="/public/resources/common/icon.png">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat:500&display=swap">
    <% let theme; %>
    <% let date = new Date(); %>
    <% let zeroTime = new Date("0/" + date.getHours() + ":" + date.getMinutes()); %>
    <% zeroTime = zeroTime.getTime(); %>
    <% if ((zeroTime >= sunset.getTime()) || (zeroTime <= sunrise.getTime())) { %>
        <% theme = true; %>
        <link id="pageStyle" rel="stylesheet" type="text/css" href="/public/css/dark_mode.css">
    <% } else { %>
        <% theme = false; %>
        <link id="pageStyle" rel="stylesheet" type="text/css" href="/public/css/light_mode.css">
    <% } %>
    <link rel="stylesheet" type="text/css" href="/public/css/main.css">
    <link id="fade" rel="stylesheet" type="text/css" href="/public/css/fade.css" disabled>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
</head>
<body>
<div class="container h-100 d-flex justify-content-center" id="signup-container">
    <div class="col-sm-12 col-md-10 col-lg-8 col-xl-7">
        <div class="card card-signin my-5 non-responsive">
            <div class="card-body">
                <h1 class="text-center card-title" style="margin-bottom: 2rem">
                    <i class="fa fa-plus-circle" aria-hidden="true"></i> Sign Up
                </h1>
                <% if (message.length > 0) { %>
                    <div class="alert alert-danger alert-dismissible">
                        <a class="close" data-dismiss="alert" aria-label="close">X</a>
                        <%- message; %>
                    </div>
                <% } %>
                <form class="form-signin" action="/signup" method="post" spellcheck="false"
                      onsubmit="$(this).find('button').prop('disabled',true).find('div').addClass('loading')">
                    <div class="form-group input-group">
                        <i class="user-bg"></i>
                        <label>Username</label>
                        <input oninput="checkLabel(this); checkUsername(this, '#usernameCheckMessage')" type="text"
                               class="form-control"
                               name="username" id="username">
                        <span class="popup">
                            <i>
                                <span class="popup-left-bottom dont-show" id="usernameCheckMessage"></span></i>
                        </span>
                    </div>
                    <div class="form-group input-group">
                        <i class="lock-bg"></i>
                        <label>Password</label>
                        <input oninput="checkLabel(this); checkPassword(this, '#passwordCheckMessage'); checkPasswordConfirm(this, '#confirmPassword', '#passwordConfirmMessage')"
                               id="password"
                               type="password" class="form-control" name="password" required>
                        <span class="popup">
                            <i><span class="popup-left-bottom dont-show" id="passwordCheckMessage"></span></i>
                        </span>
                    </div>
                    <div class="form-group input-group">
                        <i class="lock-bg"></i>
                        <label>Confirm Password</label>
                        <input oninput="checkLabel(this); checkPasswordConfirm('#password', this, '#passwordConfirmMessage')"
                               id="confirmPassword" type="password"
                               class="form-control" required>
                        <span class="popup">
                            <i>
                                <span class="popup-left-bottom dont-show" id="passwordConfirmMessage"></span></i>
                        </span>
                    </div>
                    <div class="form-group">
                        <label style="margin-right: 0.5rem; margin-left: 0.1rem;" for="school"><i class="fa fa-building-o" style="font-size: 1.5rem"></i></label>
                        <select style="width: calc(100% - 2.5rem)" name="school" id="school" class="minimal" onchange="checkSchool(this)">
                            <option value="" selected disabled>Select Your School</option>
                            <option value="bellarmine">Bellarmine College Preparatory</option>
                            <option value="basis">Basis Independent Silicon Valley</option>
                            <option value="ndsj">Notre Dame San Jose</option>
                        </select>
                    </div>
                    <div id="school-email-div" class="form-group input-group" style="display: none">
                        <i class="email-bg"></i>
                        <label>School Email</label>
                        <input oninput="checkLabel(this); checkEmail(this, '#emailCheckMessage')"
                               type="text" class="form-control" name="school_email" id="schoolEmail">
                        <span class="popup">
                            <i>
                                <span class="popup-left-bottom dont-show" id="emailCheckMessage"></span></i>
                        </span>
                    </div>
                    <div id="school-name-div" class="form-group input-group" style="display: none">
                        <i class="school-bg"></i>
                        <label>School Name (optional)</label>
                    </div>

                    <div style="display: none; align-items: center; flex-basis: content" id="personalInfo">
                        <div class="form-group input-group" style="filter: opacity(0.2)">
                            <i class="user-bg"></i>
                            <label>First Name</label>
                            <input oninput="checkLabel(this)"
                                   type="text" class="form-control" name="first_name" id="firstName" disabled>
                        </div>
                        <div class="form-group input-group" style="filter: opacity(0.2)">
                            <i class="user-bg"></i>
                            <label>Last Name</label>
                            <input oninput="checkLabel(this)"
                                   type="text" class="form-control" name="last_name" id="lastName" disabled>
                        </div>
                        <div class="form-group input-group" style="filter: opacity(0.2)">
                            <i class="user-bg"></i>
                            <label>Graduation Year</label>
                            <input oninput="checkLabel(this)"
                                   type="text" class="form-control" name="graduation_year" id="graduationYear" disabled>
                        </div>
                        <div style="margin-bottom: 2rem">
                            <span class="popup">
                                <i class="fa fa-question-circle">
                                    <span class="popup-left-bottom">This information can be changed later</span>
                                </i>
                            </span>
                        </div>
                    </div>

                    <% if (beta) { %>
                        <div class="form-group input-group">
                            <i class="key-bg"></i>
                            <label>Beta Key</label>
                            <input oninput="checkLabel(this); checkBetaKey(this, '#betakeyMessage')"
                                   class="form-control input-validator" type="text" name="beta_key"
                                   id="betaKey">
                            <span class="popup">
                                <i>
                                    <span class="popup-left-bottom dont-show" id="betakeyMessage"></span></i>
                            </span>
                        </div>
                    <% } %>
                    <div class="text-center">
                        <button id="signupBtn" type="submit" class="btn btn-default btn-lg" disabled>Signup
                            <div>
                                <span></span>
                                <span></span>
                                <span></span>
                            </div>
                        </button>
                    </div>
                </form>
            </div>

            <div class="card-footer text-center">
                <a href="/">Sign in instead</a>
            </div>
        </div>
    </div>
</div>
<!-- JavaScript Imports -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"
        integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
        crossorigin="anonymous"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
<%- include('../partials/limited_time/snowfall.ejs', {theme: theme, page: page}); %>
<script>

    let appearance = <%- JSON.stringify(_appearance); %>;
    setTimeout(() => {
        $("input").each(function () {
            let input = $(this);
            if (input[0].value) {
                input.trigger("input");
            }
        });
        enableSnow();
    }, 250);

    function checkLabel(input) {
        let label = $($(input)[0].previousElementSibling);
        input = $(input);
        if (input[0].value !== "") {
            if (!label.hasClass("label-active")) {
                label.addClass("label-active");
            }
        } else {
            label.removeClass("label-active");
        }
    }

    let checkingUsername;

    function checkUsername(inputID, messageDivID) {
        const usernameRegex = new RegExp("^[a-zA-Z0-9]*$");

        let username = $(inputID)[0].value;
        let icon = $($($(inputID)[0].nextElementSibling)[0].firstElementChild);

        if (messageDivID) {
            $(messageDivID).addClass("dont-show").removeClass("always-show");
            icon.attr("class", "fa fa-pulse fa-spinner");
            $(inputID).css("border-bottom-color", "blue");
            if (checkingUsername) {
                clearTimeout(checkingUsername);
            }

            if (username.length === 0) {
                if (messageDivID) {
                    $(messageDivID).addClass("dont-show").removeClass("always-show");
                    icon.attr("class", "");
                    $(inputID).css("border-bottom-color", "");
                    invalidateSignup();
                }
                return;
            }

            checkingUsername = setTimeout(() => {
                if (!usernameRegex.test(username)) {
                    if (messageDivID) {
                        $(messageDivID).removeClass("dont-show").addClass("always-show").css("color", "red").text("Username must contain only letters and numbers");
                        icon.attr("class", "fa fa-exclamation-circle");
                        $(inputID).css("border-bottom-color", "red");
                        invalidateSignup();
                    }
                    return;
                }
                if (username.length > 16) {
                    if (messageDivID) {
                        $(messageDivID).removeClass("dont-show").addClass("always-show").css("color", "red").text("Username must contain 16 or fewer characters");
                        icon.attr("class", "fa fa-exclamation-circle");
                        $(inputID).css("border-bottom-color", "red");
                        invalidateSignup();
                    }
                    return;
                }
                $.ajax({
                    url: "/usernameAvailable", type: "POST", async: false, data: {username: username}
                }).done((response) => {
                    if (messageDivID) {
                        // Make sure value is still the same
                        if (username === $(inputID)[0].value) {
                            $(messageDivID).removeClass("dont-show").removeClass("always-show").css("color", "green").html(response);
                            icon.attr("class", "fa fa-check-circle");
                            $(inputID).css("border-bottom-color", "");
                            validateSignup();
                        }
                    }
                }).fail((data) => {
                    if (messageDivID) {
                        // Make sure value is still the same
                        if (username === $(inputID)[0].value) {
                            $(messageDivID).removeClass("dont-show").addClass("always-show").css("color", "red").html(data.responseText);
                            icon.attr("class", "fa fa-exclamation-circle");
                            $(inputID).css("border-bottom-color", "red");
                            invalidateSignup();
                        }
                    }
                });
            }, 400);
        } else {
            return icon.attr("class") === "fa fa-check-circle";
        }
    }

    let checkingPassword;

    function checkPassword(inputID, messageDivID) {
        const lowerCaseRegex = new RegExp("^(?=.*[a-z])");
        const upperCaseRegex = new RegExp("^(?=.*[A-Z])");
        const numericRegex = new RegExp("^(?=.*[0-9])");

        let password = $(inputID)[0].value;
        let icon = $($($(inputID)[0].nextElementSibling)[0].firstElementChild);
        if (messageDivID) {
            $(messageDivID).addClass("dont-show").removeClass("always-show");
            icon.attr("class", "fa fa-pulse fa-spinner");
            $(inputID).css("border-bottom-color", "blue");
            if (checkingPassword) {
                clearTimeout(checkingPassword);
            }

            if (password === "") {
                $(messageDivID).addClass("dont-show").removeClass("always-show");
                icon.attr("class", "");
                $(inputID).css("border-bottom-color", "");
                invalidateSignup();
                return;
            }
            checkingPassword = setTimeout(() => {
                let message;
                if (password.length < 6) {
                    message = "Your password must be at least 6 characters long";
                } else if (password.length > 64) {
                    message = "Your password must be fewer than 64 characters long";
                } else if (!lowerCaseRegex.test(password)) {
                    message = "Your password must include at least one lowercase character";
                } else if (!upperCaseRegex.test(password)) {
                    message = "Your password must include at least one uppercase character";
                } else if (!numericRegex.test(password)) {
                    message = "Your password must include at least one number";
                } else {
                    message = "Strong password";
                    $(messageDivID).removeClass("dont-show").removeClass("always-show").css("color", "green").text(message);
                    icon.attr("class", "fa fa-check-circle");
                    $(inputID).css("border-bottom-color", "");
                    validateSignup();
                    return;
                }
                if (message) {
                    $(messageDivID).removeClass("dont-show").addClass("always-show").css("color", "red").text(message);
                    icon.attr("class", "fa fa-exclamation-circle");
                    $(inputID).css("border-bottom-color", "red");
                    invalidateSignup();
                } else {
                    $(messageDivID).addClass("dont-show").removeClass("always-show");
                    icon.attr("class", "");
                    $(inputID).css("border-bottom-color", "");
                    invalidateSignup();
                }
            }, 400);
        } else {
            return !((password.length < 6) || (password.length > 64) || (!lowerCaseRegex.test(password)) || (!upperCaseRegex.test(password)) || (!numericRegex.test(password)));
        }
    }

    let checkingPasswordConfirm;

    function checkPasswordConfirm(inputID, confirmID, messageDivID) {
        let password = $(inputID)[0].value;
        let confirm = $(confirmID)[0].value;
        let icon = $($($(confirmID)[0].nextElementSibling)[0].firstElementChild);
        if (messageDivID) {
            $(messageDivID).addClass("dont-show").removeClass("always-show");
            icon.attr("class", "fa fa-pulse fa-spinner");
            $(confirmID).css("border-bottom-color", "blue");
            if (checkingPasswordConfirm) {
                clearTimeout(checkingPasswordConfirm);
            }

            if (confirm === "") {
                $(messageDivID).addClass("dont-show").removeClass("always-show");
                icon.attr("class", "");
                $(confirmID).css("border-bottom-color", "");
                invalidateSignup();
                return;
            }
            checkingPasswordConfirm = setTimeout(() => {
                if (checkPassword(inputID)) {
                    if (password === confirm) {
                        $(messageDivID).removeClass("dont-show").removeClass("always-show").css("color", "green").text("Passwords match");
                        icon.attr("class", "fa fa-check-circle");
                        $(confirmID).css("color", "").css("border-bottom-color", "");
                        validateSignup();
                    } else {
                        $(messageDivID).removeClass("dont-show").addClass("always-show").css("color", "red").text("Passwords do not match");
                        icon.attr("class", "fa fa-exclamation-circle");
                        $(confirmID).css("border-bottom-color", "red");
                        invalidateSignup();
                    }
                } else {
                    $(messageDivID).removeClass("dont-show").addClass("always-show").css("color", "red").text("Enter a valid password first");
                    icon.attr("class", "fa fa-exclamation-circle");
                    $(confirmID).css("border-bottom-color", "red");
                    invalidateSignup();
                }
            }, 400);
        } else {
            return checkPassword(inputID) && password === confirm;
        }
    }

    let school;

    function checkSchool(selectDiv) {
        let value = $(selectDiv).find(":selected").val();
        if (value !== "") {
            $("#school-email-div").show();
        } else {
            $("#school-email-div").hide();
        }
        $("#schoolInput").val(value);
        if (value !== school) {
            school = value;
            checkEmail(emailDiv, '#emailCheckMessage');
        }
        return value !== "";
    }

    let checkingEmail;

    function checkEmail(inputID, messageDivID) {
        const bcpEmailRegex = /^[a-z]+\.[a-z]+[0-9]{2}@bcp\.org$/i;
        const basisEmailRegex = /^[a-z]+_[0-9]{5}@basisindependent\.com$/i;
        const ndsjEmailRegex = /^[a-z]{2,}[0-9]{2}@ndsj\.org$/i;

        let email = $(inputID)[0].value;
        let icon = $($($(inputID)[0].nextElementSibling)[0].firstElementChild);

        let personalInfo = $("#personalInfo");

        if (school === "bellarmine") {
            // First Name
            let firstName = email.indexOf(".") === -1 ? email : email.substring(0, email.indexOf("."));
            firstName = firstName.length <= 1 ? firstName.toUpperCase() : firstName[0].toUpperCase() + firstName.substring(1).toLowerCase();
            $("#firstName").val(firstName);
            checkLabel("#firstName");

            // Last Name
            let lastName = email.indexOf(".") === -1 ? "" :
                email.indexOf(email.match(/\d/)) === -1 ? email.substring(email.indexOf(".") + 1) : email.substring(email.indexOf(".") + 1, email.indexOf(email.match(/\d/)));
            lastName = lastName.length <= 1 ? lastName.toUpperCase() : lastName[0].toUpperCase() + lastName.substring(1).toLowerCase();
            $("#lastName").val(lastName);
            checkLabel("#lastName");

            // Graduation Year
            let graduationYear = email.indexOf(email.match(/\d/)) === -1 ? "" :
                email.indexOf("@") === -1 ? email.substring(email.indexOf(email.match(/\d/))) : email.substring(email.indexOf(email.match(/\d/)), email.indexOf("@"));
            if (graduationYear) {
                graduationYear = parseInt(graduationYear);
                graduationYear += 2000;
            }
            $("#graduationYear").val(graduationYear);
            checkLabel("#graduationYear");
        } else if (school === "ndsj") {
            // First Name
            let firstName = email.substring(0, 1);
            firstName = firstName.toUpperCase();
            $("#firstName").val(firstName);
            checkLabel("#firstName");

            // Last Name
            let lastName = email.indexOf(email.match(/\d/)) === -1 ? email.substring(1) : email.substring(1, email.indexOf(email.match(/\d/)));
            lastName = lastName.length <= 1 ? lastName.toUpperCase() : lastName[0].toUpperCase() + lastName.substring(1).toLowerCase();
            $("#lastName").val(lastName);
            checkLabel("#lastName");

            // Graduation Year
            let graduationYear = email.indexOf(email.match(/\d/)) === -1 ? "" :
                                 email.indexOf("@") === -1 ? email.substring(email.indexOf(email.match(/\d/))) : email.substring(email.indexOf(email.match(/\d/)), email.indexOf("@"));
            if (graduationYear) {
                graduationYear = parseInt(graduationYear);
                graduationYear += 2000;
            }
            $("#graduationYear").val(graduationYear);
            checkLabel("#graduationYear");
        } else {
            personalInfo.hide();
        }

        if (messageDivID) {
            $(messageDivID).addClass("dont-show").removeClass("always-show");
            icon.attr("class", "fa fa-pulse fa-spinner");
            $(inputID).css("border-bottom-color", "blue");
            if (checkingEmail) {
                clearTimeout(checkingEmail);
            }

            if (email === "") {
                $(messageDivID).addClass("dont-show").removeClass("always-show");
                icon.attr("class", "");
                $(inputID).css("border-bottom-color", "");
                invalidateSignup();
                personalInfo.hide();
                return false;
            }
            if (school !== "basis") {
                personalInfo.css("display", "flex");
            }
            checkingEmail = setTimeout(() => {
                if (school === "bellarmine" && !bcpEmailRegex.test(email) || school === "basis" && !basisEmailRegex.test(email) || school === "ndsj" && !ndsjEmailRegex.test(email)) {
                    $(messageDivID).removeClass("dont-show").addClass("always-show").css("color", "red").text(`This must be your ${school === "ndsj" ? "Notre Dame" : school[0].toUpperCase() + school.substring(1)} school email`);
                    icon.attr("class", "fa fa-exclamation-circle");
                    $(inputID).css("border-bottom-color", "red");
                    invalidateSignup();
                    return false;
                }
                $(messageDivID).removeClass("dont-show").removeClass("always-show").css("color", "green").text("Valid email");
                icon.attr("class", "fa fa-check-circle");
                $(inputID).css("border-bottom-color", "");
                $.ajax({
                    url: "/emailAvailable", type: "POST", async: false, data: {schoolUsername: email}
                }).done((response) => {
                    if (typeof response === "string" && response.startsWith("<!")) {  // If logged out
                        $(".session-timeout").show();
                        $("body").find("*").not(".session-timeout").remove();
                        return;
                    }
                    if (messageDivID) {
                        // Make sure value is still the same
                        if (email === $(inputID)[0].value) {
                            $(messageDivID).removeClass("dont-show").removeClass("always-show").css("color", "green").text(response);
                            icon.attr("class", "fa fa-check-circle");
                            $(inputID).css("border-bottom-color", "");
                            validateSignup();
                            return true;
                        }
                    }
                }).fail((data) => {
                    if (messageDivID) {
                        // Make sure value is still the same
                        if (email === $(inputID)[0].value) {
                            $(messageDivID).removeClass("dont-show").addClass("always-show").css("color", "red").text(data.responseText);
                            icon.attr("class", "fa fa-exclamation-circle");
                            $(inputID).css("border-bottom-color", "red");
                            invalidateSignup();
                        }
                    }
                });
            }, 400);
        } else {
            return icon.attr("class") === "fa fa-check-circle";
        }
    }

    let checkingBetaKey;

    function checkBetaKey(inputID, messageDivID) {
        const betakeyRegex = new RegExp("^[a-zA-Z0-9]*$");

        let betakey = $(inputID)[0].value;
        let icon = $($($(inputID)[0].nextElementSibling)[0].firstElementChild);

        if (!inputID) {
            return true;
        }
        if (messageDivID) {
            $(messageDivID).addClass("dont-show").removeClass("always-show");
            icon.attr("class", "fa fa-pulse fa-spinner");
            $(inputID).css("border-bottom-color", "blue");
            if (checkingBetaKey) {
                clearTimeout(checkingBetaKey);
            }

            if (betakey === "") {
                $(messageDivID).addClass("dont-show").removeClass("always-show");
                icon.attr("class", "");
                $(inputID).css("border-bottom-color", "");
                invalidateSignup();
                return;
            }
            checkingBetaKey = setTimeout(() => {
                if (!betakeyRegex.test(betakey) || betakey.length !== 7) {
                    $(messageDivID).removeClass("dont-show").addClass("always-show").css("color", "red").text("Invalid beta key");
                    icon.attr("class", "fa fa-exclamation-circle");
                    $(inputID).css("border-bottom-color", "red");
                    invalidateSignup();
                    return;
                }

                $.ajax({
                    url: "/betaKeyValid", type: "POST", async: false, data: {betaKey: betakey}
                }).done((response) => {
                    if (typeof response === "string" && response.startsWith("<!")) {  // If logged out
                        $(".session-timeout").show();
                        $("body").find("*").not(".session-timeout").remove();
                        return;
                    }
                    if (messageDivID) {
                        // Make sure value is still the same
                        if (betakey === $(inputID)[0].value) {
                            $(messageDivID).removeClass("dont-show").removeClass("always-show").css("color", "green").text(response);
                            icon.attr("class", "fa fa-check-circle");
                            $(inputID).css("border-bottom-color", "");
                            validateSignup();
                        }
                    }
                }).fail((data) => {
                    if (messageDivID) {
                        // Make sure value is still the same
                        if (betakey === $(inputID)[0].value) {
                            $(messageDivID).removeClass("dont-show").addClass("always-show").css("color", "red").text(data.responseText);
                            icon.attr("class", "fa fa-exclamation-circle");
                            $(inputID).css("border-bottom-color", "red");
                            invalidateSignup();
                        }
                    }
                });
            }, 400);
        } else {
            return icon.attr("class") === "fa fa-check-circle";
        }
    }

    let userDiv = $("#username");
    let passwordDiv = $("#password");
    let confirmDiv = $("#confirmPassword");
    let schoolDiv = $("#school");
    let emailDiv = $("#schoolEmail");
    let betaDiv = $("#betaKey");
    let signupBtn = $("#signupBtn");
    let beta = <%= beta; %>;

    function validateSignup() {
        if (!checkUsername(userDiv)) { // Invalid Username
            invalidateSignup();
            return;
        }
        if (!checkPasswordConfirm(passwordDiv, confirmDiv)) { // Invalid or Unconfirmed Password
            invalidateSignup();
            return;
        }
        if (!checkSchool(schoolDiv)) {
            invalidateSignup();
            return;
        }
        if (!checkEmail(emailDiv)) { // Invalid Bcp Email
            invalidateSignup();
            return;
        }
        if (beta && !checkBetaKey(betaDiv)) { // Invalid Beta Key
            invalidateSignup();
            return;
        }
        signupBtn.prop("disabled", "");
    }

    function invalidateSignup() {
        signupBtn.prop("disabled", "disabled");
    }


    let sunrise = <%= sunrise.getTime() %>;
    let sunset = <%= sunset.getTime() %>;
    let darkMode;

    function setAutoTheme() {
        let date = new Date();
        let zeroTime = new Date("0/" + date.getHours() + ":" + date.getMinutes());
        if (zeroTime >= sunset || zeroTime <= sunrise) {
            let oldDarkMode = document.getElementById("pageStyle").getAttribute("href") === "/public/css/dark_mode.css";
            darkMode = true;
            if (darkMode !== oldDarkMode) {
                document.getElementById("fade").disabled = false;
                document.getElementById("pageStyle").setAttribute("href", "/public/css/dark_mode.css");
                $(".navbar-brand img").attr("src", "/public/resources/dark_mode/logo.png");
                $(".navbar").removeClass("navbar-light").addClass("navbar-dark");
                setTimeout(() => {
                    document.getElementById("fade").disabled = true;
                }, 500);
            }
        } else {
            let oldDarkMode = document.getElementById("pageStyle").getAttribute("href") === "/public/css/dark_mode.css";
            darkMode = false;
            if (darkMode !== oldDarkMode) {
                document.getElementById("fade").disabled = false;
                document.getElementById("pageStyle").setAttribute("href", "/public/css/light_mode.css");
                $(".navbar-brand img").attr("src", "/public/resources/light_mode/logo.png");
                $(".navbar").removeClass("navbar-dark").addClass("navbar-light");
                setTimeout(() => {
                    document.getElementById("fade").disabled = true;
                }, 500);
            }
        }
        if (appearance.seasonalEffects) {
            init = performance.now();
            $('#lights-disabled-message').hide();
            $('#snow-disabled-message').hide();
            $("#snow-fall").show();
            $(".lightrope").show();
            if (!darkMode) {
                $("#light_snowfall").attr("media", "");
            } else {
                $("#light_snowfall").attr("media", "not all");
            }
        } else {
            $('#lights-disabled-message').hide();
            $('#snow-disabled-message').hide();
            $("#snow-fall").hide();
            $(".lightrope").hide();
        }
    }

    async function checkTime() {
        setAutoTheme();
        window.setInterval(function () {
            setAutoTheme();
        }, 100);
    }
</script>
</body>
</html>
