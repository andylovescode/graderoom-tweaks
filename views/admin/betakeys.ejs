<!doctype html>
<html lang="en-US">
<head>
    <title>Graderoom</title>
    <link rel="icon" href="/public/resources/common/icon.png">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat:500&display=swap">
    <% let theme; %>
    <% let date = new Date(); %>
    <% let zeroTime = new Date("0/" + date.getHours() + ":" + date.getMinutes()); %>
    <% zeroTime = zeroTime.getTime(); %>
    <% if (_appearance.theme === "dark") { %>
        <% theme = true; %>
        <link id="pageStyle" rel="stylesheet" type="text/css" href="/public/css/dark_mode.css">
    <% } else if (_appearance.theme === "light") { %>
        <% theme = false; %>
        <link id="pageStyle" rel="stylesheet" type="text/css" href="/public/css/light_mode.css">
    <% } else if (_appearance.theme === "auto" && (((_appearance.darkModeStart < _appearance.darkModeFinish) && ((zeroTime >= _appearance.darkModeStart) && (zeroTime < _appearance.darkModeFinish))) || ((_appearance.darkModeStart > _appearance.darkModeFinish) && ((zeroTime >= _appearance.darkModeStart) || (zeroTime < _appearance.darkModeFinish))))) { %>
        <% theme = true; %>
        <link id="pageStyle" rel="stylesheet" type="text/css" href="/public/css/dark_mode.css">
    <% } else if (_appearance.theme === "system") { %>
        <% theme = true; %>
        <link id="pageStyle" rel="stylesheet" type="text/css" href="/public/css/dark_mode.css">
    <% } else if (_appearance.theme === "sun" && ((zeroTime >= sunset.getTime()) || (zeroTime <= sunrise.getTime()))) { %>
        <% theme = true; %>
        <link id="pageStyle" rel="stylesheet" type="text/css" href="/public/css/dark_mode.css">
    <% } else { %>
        <% theme = false; %>
        <link id="pageStyle" rel="stylesheet" type="text/css" href="/public/css/light_mode.css">
    <% } %>
    <link rel="stylesheet" type="text/css" href="/public/css/main.css">
    <link id="blur_base" rel="stylesheet" type="text/css" href="/public/css/blur.css"
          <% if (!_appearance.blurEffects) { %>disabled
            <% } %>
    >
    <link id="blur_overrides" rel="stylesheet" type="text/css" <% if (theme === true) { %>
          href="/public/css/dark_blur.css"<% } else if (theme === false) { %> href="/public/css/light_blur.css"<% } %>
          <% if (!_appearance.blurEffects) { %>disabled
            <% } %>
    >
    <link id="reduceMotion" rel="stylesheet" type="text/css" href="/public/css/reduce_motion.css"
          <% if (!_appearance.reduceMotion) { %>disabled
            <% } %>
    >
    <link id="fade" rel="stylesheet" type="text/css" href="/public/css/fade.css" disabled>
    <meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body>

<!-- Admin Navbar -->
<%- include('../partials/admin/admin_navbar.ejs', {theme: theme, page: page}); %>

<!-- Main Screen -->
<div class="container">
    <!-- Messages -->
    <% if (betaKeySuccessMessage.length > 0) { %>
        <br>
        <div class="alert alert-danger alert-dismissible">
            <a class="close" data-dismiss="alert" aria-label="close">X</a>
            <%= betaKeySuccessMessage %>
        </div>
    <% } else if (betaKeyFailMessage.length > 0) { %>
        <br>
        <div class="alert alert-success alert-dismissible">
            <a class="close" data-dismiss="alert" aria-label="close">X</a>
            <%= betaKeyFailMessage %>
        </div>
    <% } else { %>
        <br>
    <% } %>

    <span id="table-container">
        <table class="table rounded-table">
            <thead>
                <tr>
                    <th style="width:30%;">Key</th>
                    <th style="width:20%;">Claimed</th>
                    <th style="width:20%;">Claimed By</th>
                    <th style="width:20%;">Delete</th>

                </tr>
            </thead>

            <% for (let k of betaKeyData) { %>
                <tr>
                    <td><%= k.betaKey %> </td>
                    <td><%= k.claimed %></td>
                    <td><%= k.claimedBy %> </td>

                    <% if (k.claimed === false){ %>

                        <td>
                            <form action="/deletebetakey" method="post">
                                <button type="submit" name="beta_key" class="btn btn-sm" value="<%= k.betaKey %>">Delete
                                    Key
                                </button>
                            </form>
                        </td>

                    <% } else { %>

                        <td>Already claimed!</td>
                    <% } %>

                </tr>
            <% } %>
        </table>
    </span>

    <div class="text-center">
        <form action="/newbetakey" method="post">
            <button type="submit" class="btn btn-sm">Create new random Beta Key</button>
        </form>
    </div>
</div>
<script>
    let checkingTheme;
    let theme = appearance.theme;
    let darkModeStart = appearance.darkModeStart;
    let darkModeFinish = appearance.darkModeFinish;
    let sunrise = <%= sunrise.getTime() %>;
    let sunset = <%= sunset.getTime() %>;

    if (theme === "auto" || theme === "sun") {
        checkTime();
    }

    function setAutoTheme() {
        let date = new Date();
        let zeroTime = new Date("0/" + date.getHours() + ":" + date.getMinutes());
        if (theme !== "auto" && theme !== "sun" && theme !== "system") {
            if (checkingTheme) {
                clearInterval(checkingTheme);
            }
            return;
        }

        let oldDarkMode = document.getElementById("pageStyle").getAttribute("href") === "/public/css/dark_mode.css";
        let oldDarkBlur = document.getElementById("blur_overrides").getAttribute("href") === "/public/css/dark_blur.css";
        if ((theme === "system" && window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches) || (theme === "sun" && (zeroTime >= sunset || zeroTime <= sunrise)) || (theme === "auto" && (((darkModeStart < darkModeFinish) && ((zeroTime >= darkModeStart) && (zeroTime < darkModeFinish)) || ((darkModeStart > darkModeFinish) && ((zeroTime >= darkModeStart) || (zeroTime < darkModeFinish))))))) {
            darkMode = true;
            if (darkMode !== oldDarkMode) {
                document.getElementById("fade").disabled = false;
                document.getElementById("pageStyle").setAttribute("href", "/public/css/dark_mode.css");
                $(".navbar-brand img").attr("src", "/public/resources/dark_mode/logo.png");
                $(".navbar").removeClass("navbar-light").addClass("navbar-dark");
                setTimeout(() => {
                    document.getElementById("fade").disabled = true;
                }, 500);
                if (appearance.seasonalEffects) {
                    init = performance.now();
                    if (darkMode === false) {
                        $("#light_snowfall").attr("media", "");
                    } else if (darkMode) {
                        $("#light_snowfall").attr("media", "not all");
                    }
                }
            }
            if (appearance.blurEffects && !oldDarkBlur) {
                document.getElementById("blur_overrides").setAttribute("href", "/public/css/dark_blur.css");
            }
        } else {
            darkMode = false;
            if (darkMode !== oldDarkMode) {
                document.getElementById("fade").disabled = false;
                document.getElementById("pageStyle").setAttribute("href", "/public/css/light_mode.css");
                $(".navbar-brand img").attr("src", "/public/resources/light_mode/logo.png");
                $(".navbar").removeClass("navbar-dark").addClass("navbar-light");
                setTimeout(() => {
                    document.getElementById("fade").disabled = true;
                }, 500);
                if (appearance.seasonalEffects) {
                    init = performance.now();
                    if (darkMode === false) {
                        $("#light_snowfall").attr("media", "");
                    } else if (darkMode) {
                        $("#light_snowfall").attr("media", "not all");
                    }
                }
            }
            if (appearance.blurEffects && oldDarkBlur) {
                document.getElementById("blur_overrides").setAttribute("href", "/public/css/light_blur.css");
            }
        }
    }

    async function checkTime() {
        if (checkingTheme) {
            clearInterval(checkingTheme);
        }
        setAutoTheme();
        checkingTheme = window.setInterval(function () {
            setAutoTheme();
        }, 100);
    }
</script>
</body>
</html>
